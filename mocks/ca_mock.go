/**
 * Copyright (c) 2017 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Automatically generated by MockGen. DO NOT EDIT!
// Source: vendor/github.com/trustedanalytics-ng/tap-ca/client/client.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/trustedanalytics-ng/tap-ca/models"
)

// Mock of TapCaApi interface
type MockTapCaApi struct {
	ctrl     *gomock.Controller
	recorder *_MockTapCaApiRecorder
}

// Recorder for MockTapCaApi (not exported)
type _MockTapCaApiRecorder struct {
	mock *MockTapCaApi
}

func NewMockTapCaApi(ctrl *gomock.Controller) *MockTapCaApi {
	mock := &MockTapCaApi{ctrl: ctrl}
	mock.recorder = &_MockTapCaApiRecorder{mock}
	return mock
}

func (_m *MockTapCaApi) EXPECT() *_MockTapCaApiRecorder {
	return _m.recorder
}

func (_m *MockTapCaApi) GetCa() (models.CaResponse, error) {
	ret := _m.ctrl.Call(_m, "GetCa")
	ret0, _ := ret[0].(models.CaResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTapCaApiRecorder) GetCa() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCa")
}

func (_m *MockTapCaApi) GetCertKey(domain string) (models.CertKeyResponse, error) {
	ret := _m.ctrl.Call(_m, "GetCertKey", domain)
	ret0, _ := ret[0].(models.CertKeyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTapCaApiRecorder) GetCertKey(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCertKey", arg0)
}

func (_m *MockTapCaApi) GetCaBundle() (models.CaBundleResponse, error) {
	ret := _m.ctrl.Call(_m, "GetCaBundle")
	ret0, _ := ret[0].(models.CaBundleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTapCaApiRecorder) GetCaBundle() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCaBundle")
}
